<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="S17_TC001-TC002" time="233.516" tests="2" failures="0" errors="0">
   <testsuite name="S17_TC001-TC002" tests="2" failures="0" errors="0" time="233.516" skipped="0" timestamp="2023-10-30 21:49:05" hostname="nasin - Testbits_Nas" id="Test Suites/Scenario 17/S17_TC001-TC002">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\nasin\\git\\tb-ttap-brivge-v2\\Reports\\20231030_214847\\Scenario 17\\S17_TC001-TC002\\20231030_214847"/>
         <property name="logFiles" value="C:\\Users\\nasin\\git\\tb-ttap-brivge-v2\\Reports\\20231030_214847\\Scenario 17\\S17_TC001-TC002\\20231030_214847\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="nasin - Testbits_Nas"/>
         <property name="os" value="Windows 11 64bit"/>
         <property name="katalonVersion" value="8.6.6.208"/>
         <property name="browser" value="Chrome 118.0.0.0"/>
         <property name="hostAddress" value="10.2.0.2"/>
         <property name="sessionId" value="b99843e43fba64cb2eb7852691740374"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 11"/>
      </properties>
      <testcase name="Test Cases/Scenario 17/S17_TC001.2- Supplier Create Shipping Route" time="104.008" classname="Test Cases/Scenario 17/S17_TC001.2- Supplier Create Shipping Route" status="PASSED">
         <system-out><![CDATA[2023-10-30 21:49:08 - [TEST_CASE][PASSED] - Test Cases/Scenario 17/S17_TC001.2- Supplier Create Shipping Route: Test Cases/Scenario 17/S17_TC001.2- Supplier Create Shipping Route

2023-10-30 21:49:16 - [TEST_STEP][PASSED] - Start listener action : beforeTestCase: null

2023-10-30 21:49:16 - [TEST_STEP][PASSED] - if (RETRY_COUNTER < MAX_RETRIES): null

2023-10-30 21:49:16 - [TEST_STEP][PASSED] - SKIP_REMAINING_TESTS = false: null

2023-10-30 21:49:18 - [TEST_STEP][PASSED] - callTestCase(findTestCase("0-Common/Login to Brivge"), ["url":BRIVGE_URL, "username":BAF_USERNAME_FATIN, "password":BAF_PWD, "verificationCode":VERIFICATION_CODE, "company":S17_BAF_SUP], STOP_ON_FAILURE): Call Test Case 'Test Cases/0-Common/Login to Brivge' successfully

2023-10-30 21:49:18 - [TEST_CASE][PASSED] - Test Cases/0-Common/Login to Brivge: Test Cases/0-Common/Login to Brivge

2023-10-30 21:49:19 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2023-10-30 21:49:19 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-10-30 21:49:19 - [MESSAGE][INFO] - User set preference: ['prefs', '{download.default_directory=C:\Katalon_Downloads}']

2023-10-30 21:49:19 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-10-30 21:49:24 - [MESSAGE][PASSED] - Browser is opened with url: ''

2023-10-30 21:49:24 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2023-10-30 21:49:24 - [MESSAGE][PASSED] - Current window maximized

2023-10-30 21:49:24 - [TEST_STEP][PASSED] - navigateToUrl(url): Navigate to 'https://st.brivge.com/' successfully

2023-10-30 21:49:30 - [MESSAGE][PASSED] - Navigate to 'https://st.brivge.com/' successfully

2023-10-30 21:49:30 - [TEST_STEP][PASSED] - setText(findTestObject("LoginPage_Brivge/input_Sign In_username"), username): Text 'nurfatin-baf' is set on object 'Object Repository/LoginPage_Brivge/input_Sign In_username'

2023-10-30 21:49:42 - [MESSAGE][PASSED] - Text 'nurfatin-baf' is set on object 'Object Repository/LoginPage_Brivge/input_Sign In_username'

2023-10-30 21:49:42 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject("LoginPage_Brivge/input_Sign In_password"), password): Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Sign In_password'

2023-10-30 21:49:43 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Sign In_password'

2023-10-30 21:49:43 - [TEST_STEP][PASSED] - click(findTestObject("LoginPage_Brivge/button_Sign In")): Object: 'Object Repository/LoginPage_Brivge/button_Sign In' is clicked on

2023-10-30 21:49:44 - [MESSAGE][PASSED] - Object: 'Object Repository/LoginPage_Brivge/button_Sign In' is clicked on

2023-10-30 21:49:44 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject("LoginPage_Brivge/input_Verify_verificationCode"), verificationCode): Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Verify_verificationCode'

2023-10-30 21:49:44 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Verify_verificationCode'

2023-10-30 21:49:44 - [TEST_STEP][PASSED] - click(findTestObject("LoginPage_Brivge/button_Verify")): Object: 'Object Repository/LoginPage_Brivge/button_Verify' is clicked on

2023-10-30 21:49:45 - [MESSAGE][PASSED] - Object: 'Object Repository/LoginPage_Brivge/button_Verify' is clicked on

2023-10-30 21:49:45 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Navbar_Brivge/p_UserLogin_Username", ["username":username]), 0): Object 'Object Repository/Navbar_Brivge/p_UserLogin_Username' is present

2023-10-30 21:49:46 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:49:52 - [MESSAGE][PASSED] - Object 'Object Repository/Navbar_Brivge/p_UserLogin_Username' is present

2023-10-30 21:49:52 - [TEST_STEP][PASSED] - click(findTestObject("Navbar_Brivge/UserProfile_Brivge/button_UserProfile")): Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_UserProfile' is clicked on

2023-10-30 21:49:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_UserProfile' is clicked on

2023-10-30 21:49:52 - [TEST_STEP][PASSED] - click(findTestObject("Navbar_Brivge/UserProfile_Brivge/button_CompanyOptions")): Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_CompanyOptions' is clicked on

2023-10-30 21:49:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_CompanyOptions' is clicked on

2023-10-30 21:49:53 - [TEST_STEP][PASSED] - click(findTestObject("Navbar_Brivge/UserProfile_Brivge/li_Company", ["company":company])): Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/li_Company' is clicked on

2023-10-30 21:49:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/li_Company' is clicked on

2023-10-30 21:49:55 - [TEST_STEP][PASSED] - waitForPageLoad(0): Wait for page load successfully

2023-10-30 21:49:55 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:49:55 - [MESSAGE][PASSED] - Wait for page load successfully

2023-10-30 21:49:55 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/0-Common/Login to Brivge' successfully

2023-10-30 21:49:55 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_Master")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_Master' is clicked on

2023-10-30 21:49:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_Master' is clicked on

2023-10-30 21:49:57 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_Shipping Route List")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_Shipping Route List' is clicked on

2023-10-30 21:49:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_Shipping Route List' is clicked on

2023-10-30 21:49:58 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_add_shipping")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_add_shipping' is clicked on

2023-10-30 21:50:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_add_shipping' is clicked on

2023-10-30 21:50:01 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__shippingRouteCode"), ShippingRouteCode): Text 'S17_PKSUP-PKCUS-30' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__shippingRouteCode'

2023-10-30 21:50:04 - [MESSAGE][PASSED] - Text 'S17_PKSUP-PKCUS-30' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__shippingRouteCode'

2023-10-30 21:50:04 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__displayShippingRoute"), DisplayShippingRoute): Text 'S17_PKSUP-PKCUS' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__displayShippingRoute'

2023-10-30 21:50:05 - [MESSAGE][PASSED] - Text 'S17_PKSUP-PKCUS' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__displayShippingRoute'

2023-10-30 21:50:05 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__activeFlag")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__activeFlag' is clicked on

2023-10-30 21:50:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__activeFlag' is clicked on

2023-10-30 21:50:06 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_activeFlag", ["ActiveFlag":ActiveFlag])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_activeFlag' is clicked on

2023-10-30 21:50:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_activeFlag' is clicked on

2023-10-30 21:50:06 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingMode")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingMode' is clicked on

2023-10-30 21:50:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingMode' is clicked on

2023-10-30 21:50:07 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_shippingMode", ["ShippingMode":ShippingMode])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingMode' is clicked on

2023-10-30 21:50:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingMode' is clicked on

2023-10-30 21:50:08 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__fromRegion")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__fromRegion' is clicked on

2023-10-30 21:50:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__fromRegion' is clicked on

2023-10-30 21:50:08 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_fromRegion", ["FromRegion":FromRegion])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_fromRegion' is clicked on

2023-10-30 21:50:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_fromRegion' is clicked on

2023-10-30 21:50:09 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__toRegion")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__toRegion' is clicked on

2023-10-30 21:50:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__toRegion' is clicked on

2023-10-30 21:50:10 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_toRegion", ["ToRegion":ToRegion])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_toRegion' is clicked on

2023-10-30 21:50:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_toRegion' is clicked on

2023-10-30 21:50:10 - [TEST_STEP][PASSED] - if (FromState != ""): null

2023-10-30 21:50:10 - [TEST_STEP][PASSED] - println("value of toState is:" + ToState + "1"): null

2023-10-30 21:50:10 - [TEST_STEP][PASSED] - if (ToState != ""): null

2023-10-30 21:50:10 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shipperUid")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shipperUid' is clicked on

2023-10-30 21:50:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shipperUid' is clicked on

2023-10-30 21:50:11 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_shipperUid", ["ShipperUid":ShipperUid])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shipperUid' is clicked on

2023-10-30 21:50:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shipperUid' is clicked on

2023-10-30 21:50:12 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__receiverUid")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__receiverUid' is clicked on

2023-10-30 21:50:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__receiverUid' is clicked on

2023-10-30 21:50:12 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_receiverUid", ["ReceiverUid":ReceiverUid])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_receiverUid' is clicked on

2023-10-30 21:50:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_receiverUid' is clicked on

2023-10-30 21:50:13 - [TEST_STEP][PASSED] - if (FromRegion != ToRegion): null

2023-10-30 21:50:13 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Scenario 13/S13_TC033_Shipping_Route/svg_shippingInformation"), 0): Scroll to object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/svg_shippingInformation' successfully

2023-10-30 21:50:13 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:50:13 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/svg_shippingInformation' successfully

2023-10-30 21:50:13 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/svg_shippingInformation")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/svg_shippingInformation' is clicked on

2023-10-30 21:50:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/svg_shippingInformation' is clicked on

2023-10-30 21:50:14 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_shippInformation_etdWeek")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_shippInformation_etdWeek' is clicked on

2023-10-30 21:50:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_shippInformation_etdWeek' is clicked on

2023-10-30 21:50:15 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Scenario 12/S12_TC006.2.1-Create Shipping Route ETD TransportDay ETA"), ["EtdWeekDay":ETDWeekDay, "TransportDays":TransportDays], STOP_ON_FAILURE): Call Test Case 'Test Cases/Scenario 12/S12_TC006.2.1-Create Shipping Route ETD TransportDay ETA' successfully

2023-10-30 21:50:15 - [TEST_CASE][PASSED] - Test Cases/Scenario 12/S12_TC006.2.1-Create Shipping Route ETD TransportDay ETA: Test Cases/Scenario 12/S12_TC006.2.1-Create Shipping Route ETD TransportDay ETA

2023-10-30 21:50:16 - [TEST_STEP][PASSED] - newEtdWeekDay = EtdWeekDay.substring(0, EtdWeekDay.length() - 1): null

2023-10-30 21:50:16 - [TEST_STEP][PASSED] - ListETDDay = new java.util.ArrayList(): null

2023-10-30 21:50:16 - [TEST_STEP][PASSED] - daysArray = newEtdWeekDay.split(","): null

2023-10-30 21:50:16 - [TEST_STEP][PASSED] - daysList = new java.util.ArrayList(java.util.Arrays.asList(daysArray)): null

2023-10-30 21:50:16 - [TEST_STEP][PASSED] - for (String ETDday : daysList): null

2023-10-30 21:50:16 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day", ["EtdWeekDay":ETDday])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day' is clicked on

2023-10-30 21:50:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day' is clicked on

2023-10-30 21:50:17 - [TEST_STEP][PASSED] - ListETDDay.add(ETDday): null

2023-10-30 21:50:17 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day", ["EtdWeekDay":ETDday])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day' is clicked on

2023-10-30 21:50:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day' is clicked on

2023-10-30 21:50:18 - [TEST_STEP][PASSED] - ListETDDay.add(ETDday): null

2023-10-30 21:50:18 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day", ["EtdWeekDay":ETDday])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day' is clicked on

2023-10-30 21:50:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_etdWeek_day' is clicked on

2023-10-30 21:50:18 - [TEST_STEP][PASSED] - ListETDDay.add(ETDday): null

2023-10-30 21:50:18 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__transportDays"), TransportDays): Text '0' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__transportDays'

2023-10-30 21:50:19 - [MESSAGE][PASSED] - Text '0' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__transportDays'

2023-10-30 21:50:19 - [TEST_STEP][PASSED] - listdays = ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]: null

2023-10-30 21:50:19 - [TEST_STEP][PASSED] - newetaday = new java.util.ArrayList(): null

2023-10-30 21:50:19 - [TEST_STEP][PASSED] - addDay = 0: null

2023-10-30 21:50:19 - [TEST_STEP][PASSED] - resultETADay = new java.lang.StringBuilder(): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - for (String dayetd : ListETDDay): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - addDay = Integer.parseInt(TransportDays): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - while (addDay >= 7): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - for (String listday : listdays): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - indexday = listdays.indexOf(listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - indexday = indexday + addDay: null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (indexday >= 7): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - nextetd = listdays.get(indexday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - newetaday.add(nextetd): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - addDay = Integer.parseInt(TransportDays): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - while (addDay >= 7): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - for (String listday : listdays): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - indexday = listdays.indexOf(listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - indexday = indexday + addDay: null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (indexday >= 7): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - nextetd = listdays.get(indexday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - newetaday.add(nextetd): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - addDay = Integer.parseInt(TransportDays): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - while (addDay >= 7): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - for (String listday : listdays): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - indexday = listdays.indexOf(listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - indexday = indexday + addDay: null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (indexday >= 7): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - nextetd = listdays.get(indexday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - newetaday.add(nextetd): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - if (dayetd == listday): null

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - for (String outputETA : newetaday): Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Scenario 13/S13_TC033_Shipping_Route/ETADAy", ["ETADAY":outputETA]), 1): Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:20 - [MESSAGE][PASSED] - Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:20 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Scenario 13/S13_TC033_Shipping_Route/ETADAy", ["ETADAY":outputETA]), 1): Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:21 - [MESSAGE][PASSED] - Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:21 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Scenario 13/S13_TC033_Shipping_Route/ETADAy", ["ETADAY":outputETA]), 1): Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:21 - [MESSAGE][PASSED] - Object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/ETADAy' is present

2023-10-30 21:50:21 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Scenario 12/S12_TC006.2.1-Create Shipping Route ETD TransportDay ETA' successfully

2023-10-30 21:50:21 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__cyCloseDays"), CloseDays): Text '0' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__cyCloseDays'

2023-10-30 21:50:22 - [MESSAGE][PASSED] - Text '0' is set on object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/input__cyCloseDays'

2023-10-30 21:50:22 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__firstEtd")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__firstEtd' is clicked on

2023-10-30 21:50:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__firstEtd' is clicked on

2023-10-30 21:50:23 - [TEST_STEP][PASSED] - firstdayetd = Integer.parseInt(DayFirstETD): null

2023-10-30 21:50:23 - [TEST_STEP][PASSED] - firstmonthetd = Integer.parseInt(MonthFirstETD): null

2023-10-30 21:50:23 - [TEST_STEP][PASSED] - firstyearetd = Integer.parseInt(YearFirstETD): null

2023-10-30 21:50:23 - [TEST_STEP][PASSED] - util.handlePicker2.handleCalendar(findTestObject("Scenario 13/S13_TC033_Shipping_Route/div_calendar header"), findTestObject("Scenario 13/S13_TC033_Shipping_Route/button next calendar"), findTestObject("Scenario 13/S13_TC033_Shipping_Route/button previous calendar"), firstdayetd, firstmonthetd, firstyearetd): util.handlePicker2.handleCalendar is PASSED

2023-10-30 21:50:28 - [MESSAGE][PASSED] - util.handlePicker2.handleCalendar is PASSED

2023-10-30 21:50:28 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__lastEtd")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__lastEtd' is clicked on

2023-10-30 21:50:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__lastEtd' is clicked on

2023-10-30 21:50:28 - [TEST_STEP][PASSED] - lastdayetd = Integer.parseInt(DayLastETD): null

2023-10-30 21:50:28 - [TEST_STEP][PASSED] - lastmonthetd = Integer.parseInt(MonthLastETD): null

2023-10-30 21:50:28 - [TEST_STEP][PASSED] - lastyearetd = Integer.parseInt(YearLastETD): null

2023-10-30 21:50:28 - [TEST_STEP][PASSED] - util.handlePicker2.handleCalendar(findTestObject("Scenario 13/S13_TC033_Shipping_Route/div_calendar header"), findTestObject("Scenario 13/S13_TC033_Shipping_Route/button next calendar"), findTestObject("Scenario 13/S13_TC033_Shipping_Route/button previous calendar"), lastdayetd, lastmonthetd, lastyearetd): util.handlePicker2.handleCalendar is PASSED

2023-10-30 21:50:40 - [MESSAGE][PASSED] - util.handlePicker2.handleCalendar is PASSED

2023-10-30 21:50:40 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Scenario 12/S12_TC006.2.2-Create Shipping Route SF Week"), ["ShippingFrequency":ShippingFrequencyWeeks], STOP_ON_FAILURE): Call Test Case 'Test Cases/Scenario 12/S12_TC006.2.2-Create Shipping Route SF Week' successfully

2023-10-30 21:50:40 - [TEST_CASE][PASSED] - Test Cases/Scenario 12/S12_TC006.2.2-Create Shipping Route SF Week: Test Cases/Scenario 12/S12_TC006.2.2-Create Shipping Route SF Week

2023-10-30 21:50:41 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Scenario 13/S13_TC033_Shipping_Route/button__shippingFrequency"), 0): Scroll to object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingFrequency' successfully

2023-10-30 21:50:41 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:50:41 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingFrequency' successfully

2023-10-30 21:50:41 - [TEST_STEP][PASSED] - click(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingFrequency")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingFrequency' is clicked on

2023-10-30 21:50:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/button__shippingFrequency' is clicked on

2023-10-30 21:50:42 - [TEST_STEP][PASSED] - newShippingFrequency = ShippingFrequency.substring(0, ShippingFrequency.length() - 1): null

2023-10-30 21:50:42 - [TEST_STEP][PASSED] - listSfWeeks = newShippingFrequency.split(","): null

2023-10-30 21:50:42 - [TEST_STEP][PASSED] - for (String sfWeek : listSfWeeks): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:42 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq", ["ShippingFrequency":sfWeek])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:43 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq", ["ShippingFrequency":sfWeek])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:43 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq", ["ShippingFrequency":sfWeek])): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/li_shippingFreq' is clicked on

2023-10-30 21:50:44 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Scenario 12/S12_TC006.2.2-Create Shipping Route SF Week' successfully

2023-10-30 21:50:44 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC033_Shipping_Route/span_Confirm")): Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/span_Confirm' is clicked on

2023-10-30 21:50:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/span_Confirm' is clicked on

2023-10-30 21:50:45 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2023-10-30 21:50:46 - [MESSAGE][PASSED] - Delayed 1 second(s)

2023-10-30 21:50:46 - [TEST_STEP][PASSED] - util.ScrollToElement.clickUsingJS(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/button_Save"), 1): util.ScrollToElement.clickUsingJS is PASSED

2023-10-30 21:50:46 - [MESSAGE][PASSED] - util.ScrollToElement.clickUsingJS is PASSED

2023-10-30 21:50:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Object Repository/Scenario 13/S13_TC033_Shipping_Route/p_The operation was successful"), "The operation was successful."): Actual text and expected text of test object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/p_The operation was successful' are matched.

2023-10-30 21:50:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Scenario 13/S13_TC033_Shipping_Route/p_The operation was successful' are matched.

2023-10-30 21:50:51 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2023-10-30 21:50:52 - [MESSAGE][PASSED] - Browser is closed

2023-10-30 21:50:52 - [TEST_STEP][PASSED] - Start listener action : afterTestCase: null

2023-10-30 21:50:52 - [TEST_STEP][PASSED] - if (testCaseStatus == "FAILED" && RETRY_COUNTER < MAX_RETRIES): null

2023-10-30 21:50:52 - [TEST_STEP][PASSED] - else: null

2023-10-30 21:50:52 - [TEST_STEP][PASSED] - SKIP_REMAINING_TESTS = true: null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Scenario 17/S17_TC002- Supplier Receive Request List" time="127.263" classname="Test Cases/Scenario 17/S17_TC002- Supplier Receive Request List" status="PASSED">
         <system-out><![CDATA[2023-10-30 21:50:52 - [TEST_CASE][PASSED] - Test Cases/Scenario 17/S17_TC002- Supplier Receive Request List: Test Cases/Scenario 17/S17_TC002- Supplier Receive Request List

2023-10-30 21:50:58 - [TEST_STEP][PASSED] - Start listener action : beforeTestCase: null

2023-10-30 21:50:58 - [TEST_STEP][PASSED] - if (RETRY_COUNTER < MAX_RETRIES): null

2023-10-30 21:50:58 - [TEST_STEP][PASSED] - SKIP_REMAINING_TESTS = false: null

2023-10-30 21:50:58 - [TEST_STEP][PASSED] - callTestCase(findTestCase("0-Common/Login to Brivge"), ["url":BRIVGE_URL, "username":BAF_USERNAME_FATIN, "password":BAF_PWD, "verificationCode":VERIFICATION_CODE, "company":S17_BAF_SUP], STOP_ON_FAILURE): Call Test Case 'Test Cases/0-Common/Login to Brivge' successfully

2023-10-30 21:50:58 - [TEST_CASE][PASSED] - Test Cases/0-Common/Login to Brivge: Test Cases/0-Common/Login to Brivge

2023-10-30 21:50:58 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2023-10-30 21:50:58 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-10-30 21:50:58 - [MESSAGE][INFO] - User set preference: ['prefs', '{download.default_directory=C:\Katalon_Downloads}']

2023-10-30 21:50:58 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-10-30 21:51:00 - [MESSAGE][PASSED] - Browser is opened with url: ''

2023-10-30 21:51:01 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2023-10-30 21:51:01 - [MESSAGE][PASSED] - Current window maximized

2023-10-30 21:51:01 - [TEST_STEP][PASSED] - navigateToUrl(url): Navigate to 'https://st.brivge.com/' successfully

2023-10-30 21:51:24 - [MESSAGE][PASSED] - Navigate to 'https://st.brivge.com/' successfully

2023-10-30 21:51:24 - [TEST_STEP][PASSED] - setText(findTestObject("LoginPage_Brivge/input_Sign In_username"), username): Text 'nurfatin-baf' is set on object 'Object Repository/LoginPage_Brivge/input_Sign In_username'

2023-10-30 21:51:26 - [MESSAGE][PASSED] - Text 'nurfatin-baf' is set on object 'Object Repository/LoginPage_Brivge/input_Sign In_username'

2023-10-30 21:51:26 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject("LoginPage_Brivge/input_Sign In_password"), password): Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Sign In_password'

2023-10-30 21:51:26 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Sign In_password'

2023-10-30 21:51:26 - [TEST_STEP][PASSED] - click(findTestObject("LoginPage_Brivge/button_Sign In")): Object: 'Object Repository/LoginPage_Brivge/button_Sign In' is clicked on

2023-10-30 21:51:27 - [MESSAGE][PASSED] - Object: 'Object Repository/LoginPage_Brivge/button_Sign In' is clicked on

2023-10-30 21:51:27 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject("LoginPage_Brivge/input_Verify_verificationCode"), verificationCode): Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Verify_verificationCode'

2023-10-30 21:51:28 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/LoginPage_Brivge/input_Verify_verificationCode'

2023-10-30 21:51:28 - [TEST_STEP][PASSED] - click(findTestObject("LoginPage_Brivge/button_Verify")): Object: 'Object Repository/LoginPage_Brivge/button_Verify' is clicked on

2023-10-30 21:51:29 - [MESSAGE][PASSED] - Object: 'Object Repository/LoginPage_Brivge/button_Verify' is clicked on

2023-10-30 21:51:29 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Navbar_Brivge/p_UserLogin_Username", ["username":username]), 0): Object 'Object Repository/Navbar_Brivge/p_UserLogin_Username' is present

2023-10-30 21:51:29 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:51:34 - [MESSAGE][PASSED] - Object 'Object Repository/Navbar_Brivge/p_UserLogin_Username' is present

2023-10-30 21:51:34 - [TEST_STEP][PASSED] - click(findTestObject("Navbar_Brivge/UserProfile_Brivge/button_UserProfile")): Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_UserProfile' is clicked on

2023-10-30 21:51:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_UserProfile' is clicked on

2023-10-30 21:51:34 - [TEST_STEP][PASSED] - click(findTestObject("Navbar_Brivge/UserProfile_Brivge/button_CompanyOptions")): Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_CompanyOptions' is clicked on

2023-10-30 21:51:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/button_CompanyOptions' is clicked on

2023-10-30 21:51:35 - [TEST_STEP][PASSED] - click(findTestObject("Navbar_Brivge/UserProfile_Brivge/li_Company", ["company":company])): Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/li_Company' is clicked on

2023-10-30 21:51:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Navbar_Brivge/UserProfile_Brivge/li_Company' is clicked on

2023-10-30 21:51:36 - [TEST_STEP][PASSED] - waitForPageLoad(0): Wait for page load successfully

2023-10-30 21:51:36 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:51:36 - [MESSAGE][PASSED] - Wait for page load successfully

2023-10-30 21:51:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/0-Common/Login to Brivge' successfully

2023-10-30 21:51:36 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Master")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Master' is clicked on

2023-10-30 21:51:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Master' is clicked on

2023-10-30 21:51:39 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/li_Received Request List")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/li_Received Request List' is clicked on

2023-10-30 21:51:40 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/li_Received Request List' is clicked on

2023-10-30 21:51:40 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/p_edit", ["description":description])): Object: 'Object Repository/Scenario 17/S17_TC002/p_edit' is clicked on

2023-10-30 21:51:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/p_edit' is clicked on

2023-10-30 21:51:42 - [TEST_STEP][NOT_RUN] - click(findTestObject("Scenario 12/SC12_TC004/button_Back")): NOT_RUN: click(findTestObject("Scenario 12/SC12_TC004/button_Back"))

2023-10-30 21:51:42 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("Scenario 12/SC12_TC004/button_Back"))

2023-10-30 21:51:42 - [TEST_STEP][NOT_RUN] - click(findTestObject("Scenario 12/SC12_TC004/button_Back")): NOT_RUN: click(findTestObject("Scenario 12/SC12_TC004/button_Back"))

2023-10-30 21:51:42 - [MESSAGE][NOT_RUN] - NOT_RUN: click(findTestObject("Scenario 12/SC12_TC004/button_Back"))

2023-10-30 21:51:42 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Next")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Next' is clicked on

2023-10-30 21:51:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Next' is clicked on

2023-10-30 21:51:45 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Download")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Download' is clicked on

2023-10-30 21:51:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Download' is clicked on

2023-10-30 21:51:46 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/li_Download Part Form")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/li_Download Part Form' is clicked on

2023-10-30 21:51:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/li_Download Part Form' is clicked on

2023-10-30 21:51:47 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Scenario 13/S13_TC035/Page_Brivge/div_The operation was successful"), 0): Object 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/div_The operation was successful' is present

2023-10-30 21:51:47 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:51:51 - [MESSAGE][PASSED] - Object 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/div_The operation was successful' is present

2023-10-30 21:51:51 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-10-30 21:51:53 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-10-30 21:51:53 - [TEST_STEP][PASSED] - downloadedExcel = ManageFiles.getLatestFileFromDirectory("excel"): ManageFiles.getLatestFileFromDirectory is PASSED

2023-10-30 21:51:54 - [MESSAGE][INFO] - Latest Excel File In Directory: C:\Katalon_Downloads\Request detail for contract.20231030215151.xlsx

2023-10-30 21:51:54 - [MESSAGE][PASSED] - ManageFiles.getLatestFileFromDirectory is PASSED

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - callTestCase(findTestCase("0-Common/Common-Scenario 17/S17_Cmn1-Write Info into Form Excel"), ["datafile":datafile_contractPartsInfo, "fileColumns":fileColumns, "startRowFormMinusOne":startRowFormMinusOne, "downloadedFormPath":downloadedExcel, ... ], STOP_ON_FAILURE): Call Test Case 'Test Cases/0-Common/Common-Scenario 17/S17_Cmn1-Write Info into Form Excel' successfully

2023-10-30 21:51:54 - [TEST_CASE][PASSED] - Test Cases/0-Common/Common-Scenario 17/S17_Cmn1-Write Info into Form Excel: Test Cases/0-Common/Common-Scenario 17/S17_Cmn1-Write Info into Form Excel

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - for (def index : (1..datafile.getRowNumbers())): copyToExcel.exel4 is PASSED

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - for (def pair : fileColumns): copyToExcel.exel4 is PASSED

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:54 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:56 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:56 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:56 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:57 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:57 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:57 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:57 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:58 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:58 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:58 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:58 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - for (def pair : fileColumns): copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:51:59 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:00 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:00 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:00 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:00 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:01 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:01 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:01 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:01 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:02 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:02 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:02 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - for (def pair : fileColumns): copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:03 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:04 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:04 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:04 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:04 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:05 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:05 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:05 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:05 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - for (def pair : fileColumns): copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:06 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:07 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:07 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:07 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:07 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:08 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:08 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:08 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:08 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - for (def pair : fileColumns): copyToExcel.exel4 is PASSED

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:09 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:10 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:11 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:12 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:12 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - columnName = key: null

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - columnIndex = value: null

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - dataValue = datafile.getValue(columnName, index): null

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - copyToExcel.exel4(dataValue, index + startRowFormMinusOne, columnIndex, downloadedFormPath, downloadedFormSheetname): copyToExcel.exel4 is PASSED

2023-10-30 21:52:12 - [MESSAGE][PASSED] - copyToExcel.exel4 is PASSED

2023-10-30 21:52:12 - [TEST_STEP][PASSED] - println("Wait for writing to finish"): null

2023-10-30 21:52:13 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/0-Common/Common-Scenario 17/S17_Cmn1-Write Info into Form Excel' successfully

2023-10-30 21:52:13 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Upload")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Upload' is clicked on

2023-10-30 21:52:13 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Upload' is clicked on

2023-10-30 21:52:13 - [TEST_STEP][PASSED] - RobotUpload.uploadFile(findTestObject("Scenario 13/S13_TC035/Page_Brivge/li_Upload Master"), downloadedExcel): RobotUpload.uploadFile is PASSED

2023-10-30 21:52:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/li_Upload Master' is clicked on

2023-10-30 21:52:18 - [MESSAGE][PASSED] - RobotUpload.uploadFile is PASSED

2023-10-30 21:52:18 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-10-30 21:52:20 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-10-30 21:52:20 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Scenario 13/S13_TC035/Page_Brivge/div_Upload_The operation was successful"), 0): Object 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/div_Upload_The operation was successful' is present

2023-10-30 21:52:21 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:52:25 - [MESSAGE][PASSED] - Object 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/div_Upload_The operation was successful' is present

2023-10-30 21:52:25 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Next")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Next' is clicked on

2023-10-30 21:52:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Next' is clicked on

2023-10-30 21:52:25 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/input__businessType")): Object: 'Object Repository/Scenario 17/S17_TC002/input__businessType' is clicked on

2023-10-30 21:52:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/input__businessType' is clicked on

2023-10-30 21:52:29 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/li_businessType", ["businessType":businessType])): Object: 'Object Repository/Scenario 17/S17_TC002/li_businessType' is clicked on

2023-10-30 21:52:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/li_businessType' is clicked on

2023-10-30 21:52:29 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/input__orderFrequency")): Object: 'Object Repository/Scenario 17/S17_TC002/input__orderFrequency' is clicked on

2023-10-30 21:52:30 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/input__orderFrequency' is clicked on

2023-10-30 21:52:30 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/li_orderFrequency", ["orderFrequency":orderFrequency])): Object: 'Object Repository/Scenario 17/S17_TC002/li_orderFrequency' is clicked on

2023-10-30 21:52:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/li_orderFrequency' is clicked on

2023-10-30 21:52:31 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 9/SC9_TC004/input__deliveryToUid")): Object: 'Object Repository/Scenario 9/SC9_TC004/input__deliveryToUid' is clicked on

2023-10-30 21:52:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 9/SC9_TC004/input__deliveryToUid' is clicked on

2023-10-30 21:52:34 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 9/SC9_TC004/li_deliveryTo", ["deliveryTo":deliveryTo])): Object: 'Object Repository/Scenario 9/SC9_TC004/li_deliveryTo' is clicked on

2023-10-30 21:52:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 9/SC9_TC004/li_deliveryTo' is clicked on

2023-10-30 21:52:35 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 17/S17_TC002/input__forecastNumber"), forecastNumber): Text '1' is set on object 'Object Repository/Scenario 17/S17_TC002/input__forecastNumber'

2023-10-30 21:52:36 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Scenario 17/S17_TC002/input__forecastNumber'

2023-10-30 21:52:36 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 17/S17_TC002/input__targetLeadTime"), targetLeadTime): Text '1' is set on object 'Object Repository/Scenario 17/S17_TC002/input__targetLeadTime'

2023-10-30 21:52:38 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Scenario 17/S17_TC002/input__targetLeadTime'

2023-10-30 21:52:38 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 9/SC9_TC004/input__confirmOrderLeadtime"), confirmOrderLeadTime): Text '1' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__confirmOrderLeadtime'

2023-10-30 21:52:39 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__confirmOrderLeadtime'

2023-10-30 21:52:39 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 9/SC9_TC004/input__leadtime"), leadtime): Text '1' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__leadtime'

2023-10-30 21:52:40 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__leadtime'

2023-10-30 21:52:40 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 9/SC9_TC004/input__deliveryPlanStartDate"), deliveryPlanStartDate): Text '1' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__deliveryPlanStartDate'

2023-10-30 21:52:41 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__deliveryPlanStartDate'

2023-10-30 21:52:41 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 9/SC9_TC004/input__contractShortCode"), contractShortCode): Text 's1730' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__contractShortCode'

2023-10-30 21:52:42 - [MESSAGE][PASSED] - Text 's1730' is set on object 'Object Repository/Scenario 9/SC9_TC004/input__contractShortCode'

2023-10-30 21:52:42 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/input__paymentTermsId"), STOP_ON_FAILURE): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__paymentTermsId' is clicked on

2023-10-30 21:52:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__paymentTermsId' is clicked on

2023-10-30 21:52:42 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/li_Payment Terms Code", ["paymentTermCode":paymentTermCode])): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Payment Terms Code' is clicked on

2023-10-30 21:52:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Payment Terms Code' is clicked on

2023-10-30 21:52:43 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/input__currencyCode")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__currencyCode' is clicked on

2023-10-30 21:52:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__currencyCode' is clicked on

2023-10-30 21:52:43 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/li_Currency", ["currency":currency])): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Currency' is clicked on

2023-10-30 21:52:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Currency' is clicked on

2023-10-30 21:52:44 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/input__priceBasis")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__priceBasis' is clicked on

2023-10-30 21:52:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__priceBasis' is clicked on

2023-10-30 21:52:45 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/li_Price Basis", ["priceBasis":priceBasis])): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Price Basis' is clicked on

2023-10-30 21:52:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Price Basis' is clicked on

2023-10-30 21:52:45 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 9/SC9_TC002/input_shippingRouteCode")): Object: 'Object Repository/Scenario 9/SC9_TC002/input_shippingRouteCode' is clicked on

2023-10-30 21:52:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 9/SC9_TC002/input_shippingRouteCode' is clicked on

2023-10-30 21:52:46 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 9/SC9_TC002/li_shippingRouteCode", ["shippingRouteCode":shippingRouteCode])): Object: 'Object Repository/Scenario 9/SC9_TC002/li_shippingRouteCode' is clicked on

2023-10-30 21:52:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 9/SC9_TC002/li_shippingRouteCode' is clicked on

2023-10-30 21:52:47 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/input_autoDiFlag")): Object: 'Object Repository/Scenario 17/S17_TC002/input_autoDiFlag' is clicked on

2023-10-30 21:52:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/input_autoDiFlag' is clicked on

2023-10-30 21:52:48 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 17/S17_TC002/li_autoDiFlag", ["autoDIFlag":autoDIFlag])): Object: 'Object Repository/Scenario 17/S17_TC002/li_autoDiFlag' is clicked on

2023-10-30 21:52:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 17/S17_TC002/li_autoDiFlag' is clicked on

2023-10-30 21:52:48 - [TEST_STEP][PASSED] - setText(findTestObject("Scenario 17/S17_TC002/input_routeDescription"), routeDescription): Text 's1730' is set on object 'Object Repository/Scenario 17/S17_TC002/input_routeDescription'

2023-10-30 21:52:49 - [MESSAGE][PASSED] - Text 's1730' is set on object 'Object Repository/Scenario 17/S17_TC002/input_routeDescription'

2023-10-30 21:52:49 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/input__customsFlag")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__customsFlag' is clicked on

2023-10-30 21:52:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/input__customsFlag' is clicked on

2023-10-30 21:52:50 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Received_Request_List/li_Customs Flag", ["customsFlag":customsFlag])): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Customs Flag' is clicked on

2023-10-30 21:52:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Received_Request_List/li_Customs Flag' is clicked on

2023-10-30 21:52:51 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Complete")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Complete' is clicked on

2023-10-30 21:52:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Complete' is clicked on

2023-10-30 21:52:51 - [TEST_STEP][PASSED] - click(findTestObject("Scenario 13/S13_TC035/Page_Brivge/button_Confirm")): Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Confirm' is clicked on

2023-10-30 21:52:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/button_Confirm' is clicked on

2023-10-30 21:52:52 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Scenario 13/S13_TC035/Page_Brivge/div_Confirm Working.The operation was successful"), 0): Object 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/div_Confirm Working.The operation was successful' is present

2023-10-30 21:52:52 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-10-30 21:52:58 - [MESSAGE][PASSED] - Object 'Object Repository/Scenario 13/S13_TC035/Page_Brivge/div_Confirm Working.The operation was successful' is present

2023-10-30 21:52:58 - [TEST_STEP][PASSED] - closeBrowser(): Browser is closed

2023-10-30 21:52:59 - [MESSAGE][PASSED] - Browser is closed

2023-10-30 21:52:59 - [TEST_STEP][PASSED] - Start listener action : afterTestCase: null

2023-10-30 21:52:59 - [TEST_STEP][PASSED] - if (testCaseStatus == "FAILED" && RETRY_COUNTER < MAX_RETRIES): null

2023-10-30 21:52:59 - [TEST_STEP][PASSED] - else: null

2023-10-30 21:52:59 - [TEST_STEP][PASSED] - SKIP_REMAINING_TESTS = true: null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2023-10-30 21:49:05 - [TEST_SUITE][PASSED] - S17_TC001-TC002: Test Cases/Scenario 17/S17_TC002- Supplier Receive Request List]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
